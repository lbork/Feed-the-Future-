{"version":3,"sources":["page-404.scss","mixins/smooth-text.scss","variables/colors.scss","functions/unit.scss","mixins/null-margins.scss","mixins/respond-to.scss"],"names":[],"mappings":"AA2BA,cACE,mDAAuC,AACvC,sBAAsB,AACtB,mBAAqB,CA6BtB,AAED,uBACE,qBAAqB,AACrB,aAAa,AACb,0BAAgC,AAChC,uBAAuB,AACvB,iBAAiB,AACjB,gBAAiB,CAKlB,AAED,8BCzEE,mCAAmC,AACnC,kCAAkC,AD2ElC,WE7EiB,AF8EjB,oBG7E2B,AH8E3B,kBAAkB,AAClB,UAAW,CAKZ,AAXD,6CIxEI,YAAa,CACd,AJuEH,4CIpEI,eAAgB,CACjB,AJgFH,oBACE,wCExFiB,AFyFjB,gBGxF2B,CHyF5B,AA1DC,yHALF,cAMI,0CAAuB,CA0B1B,CAAA,AKpDG,wBLoBJ,cAUI,8CAAuB,CAsB1B,AAeD,8BASI,mBGlFyB,CHoF5B,CA1BA,AAnBC,+GAbF,cAcI,iDAAuB,CAkB1B,CAAA,AKpDG,wBLoBJ,cAkBI,8CAAuB,CAc1B,AAED,uBASI,WAAY,CAEf,CAbA,AAXC,+GArBF,cAsBI,iDAAuB,CAU1B,CAAA,AKpDG,0BLoBJ,cA0BI,gDAAuB,CAM1B,CAAA,AAHC,mHA7BF,cA8BI,mDAAuB,CAE1B,CAAA","file":"../page-404.css","sourcesContent":["@import \"variables/animation.scss\";\n@import \"variables/colors.scss\";\n@import \"variables/layout.scss\";\n@import \"variables/routes.scss\";\n@import \"variables/typography.scss\";\n@import \"functions/px-to-rem.scss\";\n@import \"functions/unit.scss\";\n@import \"functions/width.scss\";\n@import \"mixins/a11y.scss\";\n@import \"mixins/arrow-link.scss\";\n@import \"mixins/article-heading.scss\";\n@import \"mixins/caption.scss\";\n@import \"mixins/clearfix.scss\";\n@import \"mixins/dropdown-image.scss\";\n@import \"mixins/featured-flag.scss\";\n@import \"mixins/hide-text.scss\";\n@import \"mixins/hover-underline.scss\";\n@import \"mixins/hover.scss\";\n@import \"mixins/null-margins.scss\";\n@import \"mixins/placeholder.scss\";\n@import \"mixins/pseudo.scss\";\n@import \"mixins/reset-button.scss\";\n@import \"mixins/reset-list.scss\";\n@import \"mixins/respond-to.scss\";\n@import \"mixins/sidebar-image.scss\";\n@import \"mixins/smooth-text.scss\";\n\n.four-oh-four {\n  background: url(#{$path}/images/404.jpg) no-repeat left bottom;\n  background-size: cover;\n  padding: 0 !important;\n\n  @media (min-resolution: 120dpi) and (max-width: map-get($breakpoints, 'small--down')) {\n    background-image: url(#{$path}/images/404@2x.jpg);\n  }\n\n  @include respond-to('small') {\n    background-image: url(#{$path}/images/404--small.jpg);\n  }\n\n  @media (min-resolution: 120dpi) and (min-width: map-get($breakpoints, 'small')) {\n    background-image: url(#{$path}/images/404--small@2x.jpg);\n  }\n\n  @include respond-to('large') {\n    background-image: url(#{$path}/images/404--large.jpg);\n  }\n\n  @media (min-resolution: 120dpi) and (min-width: map-get($breakpoints, 'large')) {\n    background-image: url(#{$path}/images/404--large@2x.jpg);\n  }\n\n  @include respond-to('x-large') {\n    background-image: url(#{$path}/images/404--x-large.jpg);\n  }\n\n  @media (min-resolution: 120dpi) and (min-width: map-get($breakpoints, 'x-large')) {\n    background-image: url(#{$path}/images/404--x-large@2x.jpg);\n  }\n}\n\n.four-oh-four__content {\n  align-items: flex-end;\n  display: flex;\n  height: calc(100vh - #{unit(4)});\n  justify-content: center;\n  max-height: 88rem;\n  min-height: 40rem;\n\n  @include respond-to('large') {\n    height: 48vw;\n  }\n}\n\n.four-oh-four__content__inner {\n  @include smooth-text;\n  @include null-margins;\n  color: $color--white;\n  padding: 0 unit(1) unit(1);\n  text-align: center;\n  width: 100%;\n\n  @include respond-to('small') {\n    padding: 0 unit(4) unit(2);\n  }\n}\n\n.four-oh-four__lede {\n  border-top: 1px solid rgba($color--white, 0.1);\n  padding-top: unit(1);\n}\n","@mixin smooth-text {\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n@mixin un-smooth-text {\n  -webkit-font-smoothing: subpixel-antialiased;\n  -moz-osx-font-smoothing: auto;\n}\n","$color--white: #fff;\n$color--cararra: #f5f4f2;\n$color--lemon-grass: #a3a393;\n$color--fuscous-gray: #4d4d46;\n$color--tuatara: #2f2f29;\n$color--rangoon-green: #12120b;\n$color--black: #000;\n\n$color--yellow-sea: #f7a505;\n$color--rose-of-sharon: #c25700;\n$color--fire: #bd3900;\n\n$color--jelly-bean: #237c9a;\n$color--venice-blue: #045c78;\n$color--sherpa-blue: #014054;\n\n$color--sushi: #69a234;\n$color--olive-drab: #518325;\n$color--salem: #0c7549;\n$color--evening-sea: #045935;\n\n$border--light: #eaeae9;\n","@function unit($multiplier) {\n  @return $unit * $multiplier;\n}\n","@mixin null-margins {\n  > :first-child {\n    margin-top: 0;\n  }\n\n  > :last-child {\n    margin-bottom: 0;\n  }\n}\n","@mixin respond-to($breakpoint) {\n  // Retrieves the value from the key\n  $value: map-get($breakpoints, $breakpoint);\n\n  // If the key exists in the map\n  @if $value != null {\n    // Prints a media query based on the value\n    @media (min-width: $value) {\n      @content;\n    }\n  }\n\n  // If the key doesn't exist in the map\n  @else {\n    @warn 'Unfortunately,\n      no value could be retrieved from `#{$breakpoint}`. ' + 'Please make sure it is defined in `$breakpoints` map.';\n  }\n}\n"]}