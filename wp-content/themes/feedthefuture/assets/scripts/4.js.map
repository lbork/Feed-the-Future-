{"version":3,"sources":["webpack:///4.js","webpack:///./views/modules/map/index.js"],"names":["webpackJsonp","11","module","exports","__webpack_require__","_classCallCheck","instance","Constructor","TypeError","Object","defineProperty","value","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","_variables","_variables2","obj","__esModule","default","Map","el","this","mapChecks","checkMapReady","window","googleMapReady","setVariables","setUp","setTimeout","bind","markers","querySelectorAll","mapContainer","querySelector","args","mapTypeId","mapTypeControl","streetViewControl","styles","featureType","elementType","stylers","visibility","color","iconBase","vars","baseUrl","themeUrl","map","google","maps","len","addMarker","center_map","elm","latlng","LatLng","dataset","lat","lng","marker","Marker","position","icon","url","role","scaledSize","Size","push","infowindow","InfoWindow","content","title","event","addListener","open","bounds","LatLngBounds","extend","setCenter","setZoom","fitBounds"],"mappings":"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","file":"4.js","sourcesContent":["webpackJsonp([4],{\n\n/***/ 11:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _variables = __webpack_require__(0);\n\nvar _variables2 = _interopRequireDefault(_variables);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Map = function () {\n  function Map(el) {\n    _classCallCheck(this, Map);\n\n    this.el = el;\n\n    this.mapChecks = 0;\n    this.checkMapReady();\n  }\n\n  // checks for `window.googleMapReady` variable set to `true` when map script loads\n\n\n  _createClass(Map, [{\n    key: 'checkMapReady',\n    value: function checkMapReady() {\n      this.mapChecks++;\n\n      // only check for map load for 5 seconds to prevent browser lock-up\n      if (this.mapChecks <= 25) {\n        if (window.googleMapReady) {\n          this.setVariables();\n          this.setUp();\n        } else {\n          window.setTimeout(this.checkMapReady().bind(this), 200);\n        }\n      }\n    }\n  }, {\n    key: 'setVariables',\n    value: function setVariables() {\n      this.markers = this.el.querySelectorAll('.map__marker');\n      this.mapContainer = this.el.querySelector('.map__container');\n      this.args = {\n        mapTypeId: 'terrain',\n        mapTypeControl: false,\n        streetViewControl: false,\n        styles: [{\n          featureType: 'all',\n          elementType: 'labels.text',\n          stylers: [{\n            visibility: 'simplified'\n          }, {\n            color: '#014054'\n          }]\n        }, {\n          featureType: 'administrative.neighborhood',\n          elementType: 'labels',\n          stylers: [{\n            visibility: 'off'\n          }]\n        }, {\n          featureType: 'landscape',\n          elementType: 'geometry.fill',\n          stylers: [{\n            color: '#97cc66'\n          }]\n        }, {\n          featureType: 'poi',\n          elementType: 'geometry.fill',\n          stylers: [{\n            color: '#769E72'\n          }]\n        }, {\n          featureType: 'poi',\n          elementType: 'labels.text.fill',\n          stylers: [{\n            color: '#7B8758'\n          }]\n        }, {\n          featureType: 'poi',\n          elementType: 'labels.text.stroke',\n          stylers: [{\n            color: '#EBF4A4'\n          }]\n        }, {\n          featureType: 'poi.park',\n          elementType: 'geometry',\n          stylers: [{\n            visibility: 'simplified'\n          }, {\n            color: '#619c2a'\n          }]\n        }, {\n          featureType: 'road',\n          elementType: 'geometry.fill',\n          stylers: [{\n            visibility: 'simplified'\n          }]\n        }, {\n          featureType: 'road',\n          elementType: 'labels.text.fill',\n          stylers: [{\n            color: '#5B5B3F'\n          }]\n        }, {\n          featureType: 'road',\n          elementType: 'labels.text.stroke',\n          stylers: [{\n            color: '#ABCE83'\n          }]\n        }, {\n          featureType: 'road',\n          elementType: 'labels.icon',\n          stylers: [{\n            visibility: 'off'\n          }]\n        }, {\n          featureType: 'road.highway',\n          elementType: 'geometry',\n          stylers: [{\n            visibility: 'off'\n          }, {\n            color: '#ebf4a4'\n          }]\n        }, {\n          featureType: 'road.arterial',\n          elementType: 'geometry',\n          stylers: [{\n            color: '#9BBF72'\n          }]\n        }, {\n          featureType: 'road.local',\n          elementType: 'geometry',\n          stylers: [{\n            color: '#A4C67D'\n          }]\n        }, {\n          featureType: 'transit',\n          elementType: 'all',\n          stylers: [{\n            visibility: 'off'\n          }]\n        }, {\n          featureType: 'water',\n          elementType: 'geometry',\n          stylers: [{\n            visibility: 'on'\n          }, {\n            color: '#237c9a'\n          }]\n        }]\n      };\n\n      this.iconBase = _variables2.default.baseUrl() + _variables2.default.themeUrl + 'assets/images/';\n    }\n  }, {\n    key: 'setUp',\n    value: function setUp() {\n      this.map = new google.maps.Map(this.mapContainer, this.args);\n      this.map.markers = [];\n\n      for (var i = 0, len = this.markers.length; i < len; i++) {\n        this.addMarker(this.markers[i]);\n      }\n\n      this.center_map();\n    }\n  }, {\n    key: 'addMarker',\n    value: function addMarker(elm) {\n      var latlng = new google.maps.LatLng(elm.dataset.lat, elm.dataset.lng);\n\n      // create marker\n      var marker = new google.maps.Marker({\n        position: latlng,\n        icon: {\n          url: this.iconBase + 'icon-' + elm.dataset.role + '.png',\n          scaledSize: new google.maps.Size(17, 22)\n        },\n        map: this.map\n      });\n\n      // add to array\n      this.map.markers.push(marker);\n\n      // create info window\n      var infowindow = new google.maps.InfoWindow({\n        content: elm.dataset.title\n      });\n\n      // show info window when marker is clicked\n      google.maps.event.addListener(marker, 'click', function () {\n        infowindow.open(this.map, marker);\n      });\n    }\n  }, {\n    key: 'center_map',\n    value: function center_map() {\n      var bounds = new google.maps.LatLngBounds();\n\n      // loop through all markers and create bounds\n      for (var i = 0, len = this.markers.length; i < len; i++) {\n        var latlng = new google.maps.LatLng(this.markers[i].dataset.lat, this.markers[i].dataset.lng);\n\n        bounds.extend(latlng);\n      }\n\n      if (this.map.markers.length == 1) {\n        this.map.setCenter({\n          lat: 38.0,\n          lng: -97.0\n        });\n        this.map.setZoom(4);\n      } else {\n        this.map.fitBounds(bounds);\n      }\n    }\n  }]);\n\n  return Map;\n}();\n\nexports.default = Map;\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// 4.js","import vars from '../../../src/scripts/globals/variables'\n\nexport default class Map {\n  constructor(el) {\n    this.el = el\n\n    this.mapChecks = 0\n    this.checkMapReady()\n  }\n\n  // checks for `window.googleMapReady` variable set to `true` when map script loads\n  checkMapReady() {\n    this.mapChecks++\n\n    // only check for map load for 5 seconds to prevent browser lock-up\n    if (this.mapChecks <= 25) {\n      if (window.googleMapReady) {\n        this.setVariables()\n        this.setUp()\n      } else {\n        window.setTimeout(this.checkMapReady().bind(this), 200)\n      }\n    }\n  }\n\n  setVariables() {\n    this.markers = this.el.querySelectorAll('.map__marker')\n    this.mapContainer = this.el.querySelector('.map__container')\n    this.args = {\n      mapTypeId: 'terrain',\n      mapTypeControl: false,\n      streetViewControl: false,\n      styles: [\n        {\n          featureType: 'all',\n          elementType: 'labels.text',\n          stylers: [\n            {\n              visibility: 'simplified'\n            },\n            {\n              color: '#014054'\n            }\n          ]\n        },\n        {\n          featureType: 'administrative.neighborhood',\n          elementType: 'labels',\n          stylers: [\n            {\n              visibility: 'off'\n            }\n          ]\n        },\n        {\n          featureType: 'landscape',\n          elementType: 'geometry.fill',\n          stylers: [\n            {\n              color: '#97cc66'\n            }\n          ]\n        },\n        {\n          featureType: 'poi',\n          elementType: 'geometry.fill',\n          stylers: [\n            {\n              color: '#769E72'\n            }\n          ]\n        },\n        {\n          featureType: 'poi',\n          elementType: 'labels.text.fill',\n          stylers: [\n            {\n              color: '#7B8758'\n            }\n          ]\n        },\n        {\n          featureType: 'poi',\n          elementType: 'labels.text.stroke',\n          stylers: [\n            {\n              color: '#EBF4A4'\n            }\n          ]\n        },\n        {\n          featureType: 'poi.park',\n          elementType: 'geometry',\n          stylers: [\n            {\n              visibility: 'simplified'\n            },\n            {\n              color: '#619c2a'\n            }\n          ]\n        },\n        {\n          featureType: 'road',\n          elementType: 'geometry.fill',\n          stylers: [\n            {\n              visibility: 'simplified'\n            }\n          ]\n        },\n        {\n          featureType: 'road',\n          elementType: 'labels.text.fill',\n          stylers: [\n            {\n              color: '#5B5B3F'\n            }\n          ]\n        },\n        {\n          featureType: 'road',\n          elementType: 'labels.text.stroke',\n          stylers: [\n            {\n              color: '#ABCE83'\n            }\n          ]\n        },\n        {\n          featureType: 'road',\n          elementType: 'labels.icon',\n          stylers: [\n            {\n              visibility: 'off'\n            }\n          ]\n        },\n        {\n          featureType: 'road.highway',\n          elementType: 'geometry',\n          stylers: [\n            {\n              visibility: 'off'\n            },\n            {\n              color: '#ebf4a4'\n            }\n          ]\n        },\n        {\n          featureType: 'road.arterial',\n          elementType: 'geometry',\n          stylers: [\n            {\n              color: '#9BBF72'\n            }\n          ]\n        },\n        {\n          featureType: 'road.local',\n          elementType: 'geometry',\n          stylers: [\n            {\n              color: '#A4C67D'\n            }\n          ]\n        },\n        {\n          featureType: 'transit',\n          elementType: 'all',\n          stylers: [\n            {\n              visibility: 'off'\n            }\n          ]\n        },\n        {\n          featureType: 'water',\n          elementType: 'geometry',\n          stylers: [\n            {\n              visibility: 'on'\n            },\n            {\n              color: '#237c9a'\n            }\n          ]\n        }\n      ]\n    }\n\n    this.iconBase = vars.baseUrl() + vars.themeUrl + 'assets/images/'\n  }\n\n  setUp() {\n    this.map = new google.maps.Map(this.mapContainer, this.args)\n    this.map.markers = []\n\n    for (let i = 0, len = this.markers.length; i < len; i++) {\n      this.addMarker(this.markers[i])\n    }\n\n    this.center_map()\n  }\n\n  addMarker(elm) {\n    let latlng = new google.maps.LatLng(elm.dataset.lat, elm.dataset.lng)\n\n    // create marker\n    let marker = new google.maps.Marker({\n      position: latlng,\n      icon: {\n        url: this.iconBase + 'icon-' + elm.dataset.role + '.png',\n        scaledSize: new google.maps.Size(17, 22)\n      },\n      map: this.map\n    })\n\n    // add to array\n    this.map.markers.push(marker)\n\n    // create info window\n    let infowindow = new google.maps.InfoWindow({\n      content: elm.dataset.title\n    })\n\n    // show info window when marker is clicked\n    google.maps.event.addListener(marker, 'click', function() {\n      infowindow.open(this.map, marker)\n    })\n  }\n\n  center_map() {\n    let bounds = new google.maps.LatLngBounds()\n\n    // loop through all markers and create bounds\n    for (let i = 0, len = this.markers.length; i < len; i++) {\n      let latlng = new google.maps.LatLng(\n        this.markers[i].dataset.lat,\n        this.markers[i].dataset.lng\n      )\n\n      bounds.extend(latlng)\n    }\n\n    if (this.map.markers.length == 1) {\n      this.map.setCenter({\n        lat: 38.0,\n        lng: -97.0\n      })\n      this.map.setZoom(4)\n    } else {\n      this.map.fitBounds(bounds)\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./views/modules/map/index.js"],"sourceRoot":""}